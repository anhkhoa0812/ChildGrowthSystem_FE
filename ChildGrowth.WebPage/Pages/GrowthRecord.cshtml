@page
@model ChildGrowth.WebPage.Pages.GrowthRecord

@{
    ViewData["Title"] = "GrowthRecord page";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"]</title>
    <!-- Bootstrap CSS (if not already in your Layout) -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
    <!-- Chart.js from CDN -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>
</head>
<body>
<div class="container">
    <!-- Canvas for the Chart.js chart -->
    <canvas id="growthChart" width="800" height="400"></canvas>
</div>
<script>
    // Note the capitalized property names.
    const chartData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ChartData));
    console.log("Chart Data:", chartData); // Debug the data

    // Extract the data arrays using correct property names
    const dates = chartData.Data.map(item => item.Date);
    const bmiValues = chartData.Data.map(item => item.Bmi);
    const heightValues = chartData.Data.map(item => item.Height);
    const weightValues = chartData.Data.map(item => item.Weight);
    
    console.log("Dates ",dates);
    console.log("BMI ",bmiValues);
    console.log("Height ",heightValues);
    console.log("Weight ",weightValues);
    // Get the canvas context
    const ctx = document.getElementById('growthChart').getContext('2d');

    // Create the Chart.js chart
    const growthChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: dates,
            datasets: [
                {
                    label: 'BMI',
                    data: bmiValues,
                    fill: true,
                    borderColor: 'rgba(75,192,192,1)',
                    backgroundColor: 'rgba(75,192,192,0.4)',
                    tension: 0.4
                },
                {
                    label: 'Height',
                    data: heightValues,
                    fill: true,
                    borderColor: 'rgba(153,102,255,1)',
                    backgroundColor: 'rgba(153,102,255,0.4)',
                    tension: 0.4
                },
                {
                    label: 'Weight',
                    data: weightValues,
                    fill: true,
                    borderColor: 'rgba(255,159,64,1)',
                    backgroundColor: 'rgba(255,159,64,0.4)',
                    tension: 0.4
                }
            ]
        },
        options: {
            responsive: true,
            plugins: {
                title: {
                    display: true,
                    text: 'Child Growth Chart'
                }
            },
            scales: {
                x: {
                    type: 'time',
                    time: {
                        parser: 'yyyy-MM-dd',
                        unit: 'month',
                        displayFormats: {
                            month: 'MMM yyyy'
                        }
                    },
                    title: {
                        display: true,
                        text: 'Date'
                    }
                },
                y: {
                    title: {
                        display: true,
                        text: 'Value'
                    }
                }
            }
        }
    });
</script>

</body>
</html>


