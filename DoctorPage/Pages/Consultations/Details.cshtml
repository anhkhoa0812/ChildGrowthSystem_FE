@page
@model DoctorPage.Pages.Consultations.Details

<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header bg-info text-white">
            <h1 class="mb-0">Consultation Details</h1>
        </div>
        <div class="card-body">
            <hr />
            <dl class="row">
                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Consultation.ConsultationId)</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Consultation.ConsultationId)</dd>
                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Consultation.Parent)</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Consultation.Parent.FullName)</dd>
                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Consultation.Child)</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Consultation.Child.FullName)</dd>
                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Consultation.ConsultationType)</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Consultation.ConsultationType)</dd>
                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Consultation.RequestDate)</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Consultation.RequestDate)</dd>
                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Consultation.FollowUpDate)</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Consultation.FollowUpDate)</dd>
                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Consultation.Priority)</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Consultation.Priority)</dd>
                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Consultation.Status)</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Consultation.Status)</dd>
                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Consultation.Description)</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Consultation.Description)</dd>
                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Consultation.Rating)</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Consultation.Description)</dd>
                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Consultation.Feedback)</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Consultation.Feedback)</dd>
            </dl>

            <div class="container mt-4">
                <!-- Display Child Growth Records based on count -->
                @if (Model.ChildRecord != null && Model.ChildRecord.Count == 1)
                {
                    <!-- Display text details if only one record -->
                    <h3>Child Growth Record</h3>
                    <p><strong>BMI:</strong> @Model.ChildRecord[0].Bmi</p>
                    <p><strong>Height:</strong> @Model.ChildRecord[0].Height</p>
                    <p><strong>Weight:</strong> @Model.ChildRecord[0].Weight</p>
                }
                else if (Model.ChildRecord != null && Model.ChildRecord.Count > 1)
                {
                    <canvas id="growthChart" width="800" height="400"></canvas>
                }
            </div>
            @if(Model.Consultation.Status == "Approved")
            {
                <!-- Form for Approved: Request Child Data -->
                <form method="post" asp-page-handler="RequestChildData">
                    <div class="mt-3">
                        <input type="hidden" name="ConsultationId" value="@Model.Consultation.ConsultationId" />
                        <div class="mt-3">
                            <button type="submit" class="btn btn-primary">Request Child Data</button>
                        </div>
                    </div>
                </form>
            }
            else if(Model.Consultation.Status == "SharedData")
            {
                <!-- Form for SharedData: Submit Response -->
                <form method="post" asp-page-handler="Response">
                    <input type="hidden" name="ConsultationId" value="@Model.Consultation.ConsultationId" />
                    <div class="mt-3">
                        <div class="mb-2">
                            <input type="text" name="Response" class="form-control" placeholder="Enter Response" />
                        </div>
                        <button type="submit" class="btn btn-success">Response</button>
                    </div>
                </form>
            }
        </div>
    </div>
</div>
@if (Model.ChildRecord != null && Model.ChildRecord.Count > 1)
{
    <script>
        // Chart data from the model
        const chartData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ChildRecord));
        console.log("Chart Data:", chartData);

        // Extract the data arrays using correct property names
        const dates = chartData.map(item => item.RecordDate);
        const bmiValues = chartData.map(item => item.Bmi);
        const heightValues = chartData.map(item => item.Height);
        const weightValues = chartData.map(item => item.Weight);

        // Get the canvas context
        const ctx = document.getElementById('growthChart').getContext('2d');

        // Create the Chart.js chart
        const growthChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: dates,
                datasets: [
                    {
                        label: 'BMI',
                        data: bmiValues,
                        fill: true,
                        borderColor: 'rgba(75,192,192,1)',
                        backgroundColor: 'rgba(75,192,192,0.4)',
                        tension: 0.4
                    },
                    {
                        label: 'Height',
                        data: heightValues,
                        fill: true,
                        borderColor: 'rgba(153,102,255,1)',
                        backgroundColor: 'rgba(153,102,255,0.4)',
                        tension: 0.4
                    },
                    {
                        label: 'Weight',
                        data: weightValues,
                        fill: true,
                        borderColor: 'rgba(255,159,64,1)',
                        backgroundColor: 'rgba(255,159,64,0.4)',
                        tension: 0.4
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    title: {
                        display: true,
                        text: 'Child Growth Chart'
                    }
                },
                scales: {
                    x: {
                        type: 'time',
                        time: {
                            parser: 'yyyy-MM-dd',
                            unit: 'month',
                            displayFormats: {
                                month: 'MMM yyyy'
                            }
                        },
                        title: {
                            display: true,
                            text: 'Date'
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'Value'
                        }
                    }
                }
            }
        });
    </script>
}
