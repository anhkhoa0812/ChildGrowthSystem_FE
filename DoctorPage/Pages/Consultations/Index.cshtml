@page
@model DoctorPage.Pages.Consultations.Index

@{
    ViewData["Title"] = "All Consultations";
}

<style>
    .status-circle {
        display: inline-block;
        width: 15px;
        height: 15px;
        border-radius: 50%;
        margin-right: 5px;
    }

    /* Status badge colors based on enum values */
    .Pending {
        background-color: #f0ad4e !important;
        color: #fff !important;
    }
    .Approved {
        background-color: #5cb85c !important;
        color: #fff !important;
    }
    .RequestSharedData {
        background-color: #5bc0de !important;
        color: #fff !important;
    }
    .SharedData {
        background-color: #337ab7 !important;
        color: #fff !important;
    }
    .Rejected {
        background-color: #d9534f !important;
        color: #fff !important;
    }
    .Completed {
        background-color: #6c757d !important;
        color: #fff !important;
    }
    .Cancelled {
        background-color: #343a40 !important;
        color: #fff !important;
    }
</style>

<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h2 class="mb-0">Consultations</h2>
        </div>
        <div class="card-body">
            <!-- Filter Section -->
            <form method="get" class="mb-4">
                <div class="row g-3 align-items-end">
                    <div class="col-md-4">
                        <label for="SearchTerm" class="form-label">Consultation ID</label>
                        <input type="number" class="form-control" id="SearchTerm" name="SearchTerm" placeholder="Search by ID" value="@Model.SearchTerm" />
                    </div>
                    <div class="col-md-4">
                        <label for="Status" class="form-label">Status</label>
                        <select class="form-select" id="Status" name="Status" onchange="this.form.submit()">
                            <option value="">-- All Statuses --</option>
                            <option value="0" selected="@(Model.Status == 0 ? "selected" : null)">Pending</option>
                            <option value="1" selected="@(Model.Status == 1 ? "selected" : null)">Approved</option>
                            <option value="2" selected="@(Model.Status == 2 ? "selected" : null)">Request Shared Data</option>
                            <option value="3" selected="@(Model.Status == 3 ? "selected" : null)">Shared Data</option>
                            <option value="4" selected="@(Model.Status == 4 ? "selected" : null)">Rejected</option>
                            <option value="5" selected="@(Model.Status == 5 ? "selected" : null)">Completed</option>
                            <option value="6" selected="@(Model.Status == 6 ? "selected" : null)">Cancelled</option>
                        </select>
                    </div>
                    <div class="col-md-4">
                        <!-- Optional: if you want manual search submission for SearchTerm -->
                        <button class="btn btn-outline-primary w-100" type="submit">Search</button>
                    </div>
                </div>
            </form>

            @if (Model.ConsultationResponse != null && Model.ConsultationResponse.Items.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover align-middle">
                        <thead class="table-dark">
                            <tr>
                                <th>Consultation ID</th>
                                <th>Parent Name</th>
                                <th>Child Name</th>
                                <th>Consultation Type</th>
                                <th>Request Date</th>
                                <th>FollowUp Date</th>
                                <th>Priority</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var consultation in Model.ConsultationResponse.Items)
                            {
                                <tr>
                                    <td>@consultation.ConsultationId</td>
                                    <td>@consultation!.Parent.FullName</td>
                                    <td>@(consultation.ChildId != null ? consultation.Child!.FullName : "N/A")</td>
                                    <td>@consultation.ConsultationType</td>
                                    <td>@(consultation.RequestDate != null ? consultation.RequestDate.Value.ToString("MM/dd/yyyy") : "N/A")</td>
                                    <td>@(consultation.FollowUpDate != null ? consultation.FollowUpDate.Value.ToString("MM/dd/yyyy") : "N/A")</td>
                                    <td>@consultation.Priority</td>
                                    <td>
                                        <span class="badge rounded-pill @(consultation.Status)">@consultation.Status</span>
                                    </td>
                                    <td>
                                        <a class="btn btn-sm btn-outline-secondary" asp-page="./Details" asp-route-id="@consultation.ConsultationId">Detail</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination Controls -->
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center">
                        @if (Model.ConsultationResponse.Page > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="/Consultations?pageIndex=@(Model.ConsultationResponse.Page - 1)&SearchTerm=@Model.SearchTerm&Status=@Model.Status">Previous</a>
                            </li>
                        }
                        @for (int i = 1; i <= Model.ConsultationResponse.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.ConsultationResponse.Page ? "active" : "")">
                                <a class="page-link" href="/Consultations?pageIndex=@i&SearchTerm=@Model.SearchTerm&Status=@Model.Status">@i</a>
                            </li>
                        }
                        @if (Model.ConsultationResponse.Page < Model.ConsultationResponse.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="/Consultations?pageIndex=@(Model.ConsultationResponse.Page + 1)&SearchTerm=@Model.SearchTerm&Status=@Model.Status">Next</a>
                            </li>
                        }
                    </ul>
                </nav>
            }
            else if (Model.ConsultationResponse != null && !Model.ConsultationResponse.Items.Any())
            {
                <div class="alert alert-info text-center" role="alert">
                    <strong>No consultations found.</strong>
                </div>
            }
            else
            {
                <div class="alert alert-danger">
                    <p>Unable to load consultations.</p>
                    @if (Model.ModelState.ContainsKey(string.Empty))
                    {
                        <ul>
                            @foreach (var error in Model.ModelState[string.Empty].Errors)
                            {
                                <li>@error.ErrorMessage</li>
                            }
                        </ul>
                    }
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <!-- Optional: Add Bootstrap or custom JS if needed -->
}
